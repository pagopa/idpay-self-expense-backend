microservice-chart:
  namespace: "idpay"
  nameOverride: ""
  fullnameOverride: ""

  livenessProbe:
    handlerType: httpGet
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  readinessProbe:
    handlerType: httpGet
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 125
    failureThreshold: 15
    periodSeconds: 10

  deployment:
    create: true

  service:
    create: true
    type: ClusterIP
    ports:
      - 8080

  ingress:
    create: true
    path: /idpayadmissibility/(.*)
    servicePort: 8080

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 10000
    runAsGroup: 10000

  envConfig:
    APP: "idpay-admissibility-assessor"
    KAFKA_BENEFICIARY_RULE_REQUEST_GROUP_ID: "idpay-beneficiary-rule-update-consumer-group"
    KAFKA_COMMANDS_GROUP_ID: "idpay-commands-admissibility-consumer-group"
    MONGODB_DBNAME: "idpay"
    APPLICATIONINSIGHTS_ROLE_NAME: "idpayadmissibilityassessor"
    APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL: "OFF"
    APPLICATIONINSIGHTS_INSTRUMENTATION_MICROMETER_ENABLED: "false"
    APPLICATIONINSIGHTS_PREVIEW_PROFILER_ENABLED: "false"
    _JAVA_OPTIONS: "-Djava.util.concurrent.ForkJoinPool.common.parallelism=7 -Dio.netty.eventLoopThreads=100 -Dreactor.netty.ioWorkerCount=4 -Dreactor.netty.pool.maxConnections=16"
    DELETE_PAGINATION_SIZE: "60"
    DELETE_DELAY_TIME: "1000"
    HEALTH_MONGO_ENABLED: "false"

  externalConfigMapValues:
    idpay-common:
      TZ: TZ
    idpay-eventhub-00:
      KAFKA_BROKER: kafka_broker
      KAFKA_CONFIG_SASL_MECHANISM: kafka_sasl_mechanism
      KAFKA_CONFIG_SECURITY_PROTOCOL: kafka_security_protocol
      KAFKA_ONBOARDING_REQUEST_TOPIC: idpay_onboarding_request_topic
      KAFKA_ONBOARDING_OUTCOME_TOPIC: idpay_onboarding_outcome_topic
      KAFKA_RANKING_REQUEST_TOPIC: idpay-onboarding-ranking-request
    idpay-eventhub-01:
      KAFKA_BENEFICIARY_RULE_BROKER: kafka_broker
      KAFKA_BENEFICIARY_RULE_REQUEST_TOPIC: idpay_rule_update_topic
      KAFKA_ERRORS_BROKER: kafka_broker
      KAFKA_ERRORS_TOPIC: idpay_error_topic
      KAFKA_COMMANDS_BROKER: kafka_broker
      KAFKA_COMMANDS_TOPIC: idpay_commands_topic
    rest-client:
      PDV_BASE_URL: pdv_decrypt_base_url
      IDPAY_MOCK_BASE_URL: idpay_mock_base_url


  envSecret:
    MONGODB_URI: mongodb-connection-string
    KAFKA_ONBOARDING_OUTCOME_SASL_JAAS_CONFIG: evh-idpay-onboarding-outcome-idpay-onboarding-outcome-producer-jaas-config-idpay-00
    KAFKA_RANKING_REQUEST_SASL_JAAS_CONFIG: evh-idpay-onboarding-ranking-request-idpay-onboarding-ranking-request-producer-jaas-config-idpay-00
    KAFKA_BENEFICIARY_RULE_REQUEST_SASL_JAAS_CONFIG: evh-idpay-rule-update-idpay-rule-update-consumer-jaas-config-idpay-01
    SERVICEBUS_ONBOARDING_CONNECTION_STRING: idpay-onboarding-request-processor-sas-key
    KAFKA_ERRORS_SASL_JAAS_CONFIG: evh-idpay-errors-idpay-errors-producer-jaas-config-idpay-01
    REDIS_CONNECTION_URL: idpay-redis-00-primary-connection-url
    PDV_DECRYPT_API_KEY: pdv-api-key
    KAFKA_COMMANDS_SASL_JAAS_CONFIG: evh-idpay-commands-idpay-commands-consumer-jaas-config-idpay-01

    UTIL_CRYPTO_AES_SECRET_TYPE_PBE_SALT: notification-token-salt
    UTIL_CRYPTO_AES_SECRET_TYPE_PBE_PASSPHRASE: notification-token-passphrase
    UTIL_CRYPTO_AES_MODE_GCM_IV: notification-token-iv


  # nodeSelector: {}

  # tolerations: []

  # affinity: {}

  externalConfigMapFiles:
    create: true
    configMaps:
      - name: appinsights-config
        key: applicationinsights.json